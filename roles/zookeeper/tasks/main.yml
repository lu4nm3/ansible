---
# Create ZooKeeper mount directories
- name: Creating ZooKeeper {{ data_mount }} and {{ log_mount }} mount directories
  file: path={{ item }} state=directory
  with_items: data_log_dirs

# Format ZooKeeper disks
- name: Formatting ZooKeeper disks
  filesystem: dev={{ item }} fstype=ext4
  with_items: disk_dirs

# Mount ZooKeeper disks
- name: Mounting ZooKeeper disks
  mount: name={{ item.0 }} src={{ item.1 }} fstype=ext4 state=mounted
  with_together:
    - data_log_dirs
    - disk_dirs

################################################################
## Install wget if not already present
#- name: Installing wget
#  apt: name=wget update_cache=yes state=latest
#
## Check if Docker is already installed
#- name: Checking if Docker is already installed
#  stat: path=/usr/bin/docker
#  register: docker_file
#
## Install Docker
#- name: Installing Docker
#  shell: wget -qO- https://get.docker.com/ | sh
#  when: not docker_file.stat.exists
#
## Check if Docker Compose is already installed
#- name: Checking if Docker Compose is already installed
#  stat: path=/usr/local/bin/docker-compose
#  register: docker_compose_file
#
## Install Docker Compose
#- name: Installing Docker Compose
#  shell: curl -L https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#  when: not docker_compose_file.stat.exists
#- file: path=/usr/local/bin/docker-compose mode=u+x,g+x,o+x
#  when: not docker_compose_file.stat.exists
################################################################

# Create ZooKeeper directories
- name: Creating ZooKeeper directories
  file: path={{ conf_dir }} state=directory owner={{ user }} group={{ group }}
- file: path={{ log_dir }} state=directory owner={{ user }} group={{ group }}
- file: path=/zookeeper state=directory recurse=yes owner={{ user }} group={{ group }}

# Configure ZooKeeper
- name: Configuring ZooKeeper
  template: src=zoo.cfg.j2 dest={{ conf_dir }}/zoo.cfg owner={{ user }} group={{ group }}
- template: src=java.env.j2 dest={{ conf_dir }}/java.env owner={{ user }} group={{ group }}
- template: src=log4j.properties.j2 dest={{ conf_dir }}/log4j.properties owner={{ user }} group={{ group }}
- template: src=myid.j2 dest={{ data_dir }}/myid owner={{ user }} group={{ group }}
- template: src=docker-compose.yml.j2 dest=/home/zookeeper/docker-compose.yml owner={{ user }} group={{ group }}

# Start ZooKeeper Docker container
#- name: Starting ZooKeeper Docker container
#  docker:
#    hostname: "{{ hostname }}"
#    image: "{{ image }}"
#    name: "{{ name }}"
#    ports: "{{ ports }}"
#    pull: "{{ pull }}"
#    restart_policy: "{{ restart_policy }}"
#    state: "{{ state }}"
#    volumes: "{{ volumes }}"