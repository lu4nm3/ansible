#cloud-config

coreos:
  etcd2:
    advertise-client-urls: http://$private_ipv4:4001
    data-dir: /var/lib/etcd2
    discovery: "$(eval $(curl https://discovery.etcd.io/new?size=1))"
    election-timeout: 1200
    initial-advertise-peer-urls: http://$private_ipv4:7001
    listen-client-urls: http://$private_ipv4:4001,http://localhost:4001
    listen-peer-urls: http://$private_ipv4:7001,http://localhost:7001
  flannel:
    etcd_endpoints: http://localhost:4001
  fleet:
    etcd_servers: http://localhost:4001
    metadata: role=kubernetes
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: flannel.service
      command: start
      content: |
        [Unit]
        After=etcd2.service
        Description=Flannel
        Requires=etcd2.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://github.com/coreos/flannel/releases/download/v0.5.2/flannel-0.5.2-linux-amd64.tar.gz
        ExecStartPre=/usr/bin/tar zxvf /opt/bin/flannel-0.5.2-linux-amd64.tar.gz -C /opt/bin
        ExecStartPre=/usr/bin/cp /opt/bin/flannel-0.5.2/flanneld /opt/bin
        ExecStartPre=/usr/bin/rm -r /opt/bin/flannel-0.5.2-linux-amd64.tar.gz /opt/bin/flannel-0.5.2
        ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network": "10.244.0.0/16", "Backend": {"Type": "vxlan"}}'
        ExecStart=/opt/bin/flanneld
        Restart=always
        RestartSec=5s
        [Install]
        WantedBy=multi-user.target
    - name: docker.service
      command: start
      content: |
        [Unit]
        After=flannel.service
        Description=Docker
        Requires=flannel.service
        [Service]
        EnvironmentFile=/run/flannel/subnet.env
        ExecStart=/usr/bin/docker -d --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU}
        Restart=always
        RestartSec=5
        [Install]
        WantedBy=multi-user.target
    - name: confd.service
      command: start
      content: |
        [Unit]
        After=etcd2.service
        Description=Confd
        Requires=etcd2.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -O /opt/bin/confd https://github.com/kelseyhightower/confd/releases/download/v0.10.0/confd-0.10.0-linux-amd64
        ExecStartPre=/usr/bin/chmod +x /opt/bin/confd
        ExecStartPre=/usr/bin/mkdir -p /etc/confd
        ExecStart=/opt/bin/confd -watch
        Restart=always
        [Install]
        WantedBy=multi-user.target
    # - name: kubernetes-download.service
    #   command: start
    #   content: |
    #     [Unit]
    #     Description=Download Kubernetes downloads
    #     [Service]
    #     ExecStart=/usr/bin/wget -N -P /opt/bin https://github.com/kubernetes/kubernetes/releases/download/v1.0.3/kubernetes.tar.gz
    #     ExecStart=/usr/bin/tar zxvf /opt/bin/kubernetes.tar.gz -C /opt/bin
    #     ExecStart=/usr/bin/tar zxvf /opt/bin/kubernetes/server/kubernetes-server-linux-amd64.tar.gz -C /opt/bin/kubernetes/server
    #     ExecStart=/usr/bin/cp /opt/bin/kubernetes/server/kubernetes/server/bin/{kube-apiserver,kube-controller-manager,kube-proxy,kube-scheduler,kubectl,kubelet} /opt/bin
    #     ExecStart=/usr/bin/rm -r /opt/bin/kubernetes.tar.gz /opt/bin/kubernetes
    #     RemainAfterExit=yes
    #     Type=oneshot
    - name: get-kubectl.service
      command: start
      content: |
        [Unit]
        Description=Get kubectl client tool
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target
        After=network-online.target
        [Service]
        ExecStart=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kubectl
        ExecStart=/usr/bin/chmod +x /opt/bin/kubectl
        Type=oneshot
        RemainAfterExit=true
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=docker.service etcd2.service
        After=docker.service etcd2.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kube-apiserver
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-apiserver
        ExecStart=/opt/bin/kube-apiserver \
        --service-cluster-ip-range=10.100.0.0/16 \
        --etcd-servers=http://127.0.0.1:4001
        Restart=always
        RestartSec=5
    - name: kube-controller-manager.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kube-controller-manager
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
        --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
    # - name: kube-register.service
    #   command: start
    #   content: |
    #     [Unit]
    #     Description=Kubernetes Registration Service
    #     Documentation=https://github.com/kelseyhightower/kube-register
    #     Requires=kube-apiserver.service fleet.service
    #     After=kube-apiserver.service fleet.service
    #     [Service]
    #     ExecStartPre=-/usr/bin/wget -nc -O /opt/bin/kube-register https://github.com/kelseyhightower/kube-register/releases/download/v0.0.3/kube-register-0.0.3-linux-amd64
    #     ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-register
    #     ExecStart=/opt/bin/kube-register \
    #     --metadata=k8srole=node \
    #     --fleet-endpoint=unix:///var/run/fleet.sock \
    #     --api-endpoint=http://127.0.0.1:8080
    #     Restart=always
    #     RestartSec=10
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=kube-apiserver.service
        After=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kube-scheduler
        ExecStartPre=/usr/bin/chmod +x /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler \
        --master=127.0.0.1:8080
        Restart=always
        RestartSec=10
  update:
    group: alpha
    reboot-strategy: off
